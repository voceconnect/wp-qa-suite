#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

##
# CONSTANTS
##
readonly PROJECT_ROOT="${PWD}"
readonly WPQA_SCRIPT_DIR="$( cd "$( dirname "$0" )" && pwd )"
readonly WPCS_DIR="/tmp/wpcs"

#######################################
# download and extract WP coding
# standards, add to phpcs installed paths
# Globals:
#   WPCS_DIR
# Arguments:
#   None
# Returns:
#   Nothing
#######################################
function install_wordpress_coding_standards() {
  mkdir -p "${WPCS_DIR}"

  wget -nv -O "/tmp/wpcs.tar.gz" \
    "https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/archive/master.tar.gz"
  tar --strip-components=1 -zxmf "/tmp/wpcs.tar.gz" -C "${WPCS_DIR}"

  "${WPQA_SCRIPT_DIR}/phpcs" --config-set installed_paths "${WPCS_DIR}"
}

function execute_php_codesniff_tests() {
  "${WPQA_SCRIPT_DIR}/phpcs" \
    -v \
    --standard="phpcs.ruleset.xml" \
    $(git ls-tree -r --name-only HEAD . | grep "\.php$")
}

#######################################
# executes PHP code sniffs using
# WordPress coding standards or a
# phpcs.ruleset.xml file when present
# any php file in the project
#######################################
function main() {
  if [[ -e "phpcs.ruleset.xml" ]]; then
    install_wordpress_coding_standards
    execute_php_codesniff_tests
  else
    echo "missing phpcs.ruleset.xml file, exiting..."
    exit 1
  fi
}

main "$@"
